#!/bin/sh

#
# Generate table comments from DataDictionary XML
# See
# https://github.com/linz/linz-bde-schema/issues/54#issuecomment-347681119
#

test -n "$1" || {
    echo "Usage: $0 <DataDictionary.xml> [<schema.sql>]" >&2 && exit 1;
}

SOURCE=$1
DDL=$2

echo "-- Generated by $0 on "`date`
echo "-- From input: $SOURCE"

xsltproc /dev/stdin $SOURCE << EOF | \
perl -e '
my $state=0;
my $use=1;
my %tables;
my $ddl = shift;
if ( $ddl ) {
    print "-- Filtered by DDL: $ddl\n";
    open(DDL, "<$ddl") || die "Cannot open $ddl for reading\n";
    while(<DDL>)
    {
        if ( /CREATE TABLE (.*) \(/ )
        {
            my $table = $1;
            $table =~ s/^.*\.//;
            #print "-- Found table: [$table]\n";
            $tables{$table} = 1;
        }
    }
}
while(<>) {
    if ( $state == 0 && /^-- START TABLE (.*)/ )
    {
        my $table = lc($1);
        $use = $tables{$table} ? 1 : $ddl ? 0 : 1;
        $state = 1;
        #print "-- USE table [$table] ? $use\n";
    }
    if ( $use )
    {
        print
    }
    if ( $state == 1 && /^-- END TABLE/ )
    {
        $state = 0;
    }
}
' $DDL

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
  <xsl:output method="text"/>
  <xsl:template match="entity-list">
    <xsl:for-each select="entity">
      <xsl:if test="contains(code, 'CRS_')">
-- START TABLE <xsl:value-of select="code"/>
COMMENT ON TABLE bde.<xsl:value-of select="code"/> IS \$DESC\$
<xsl:value-of select="description"/>
\$DESC\$;
-- END TABLE
</xsl:if>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
EOF
