sudo: required
language: C++

matrix:

  include:

  - env:
    - PG=9.3
    - PGIS=2.3
    addons:
      postgresql: 9.3
      apt:
        packages:
        - postgresql-9.3
        - postgresql-9.3-pgtap
        - postgresql-server-dev-9.3
        - postgresql-9.3-postgis-2.3

  - env:
    - PG=9.4
    - PGIS=2.3
    addons:
      postgresql: 9.4
      apt:
        packages:
        - postgresql-9.4
        - postgresql-9.4-pgtap
        - postgresql-server-dev-9.4
        - postgresql-9.4-postgis-2.3

  - env:
    - PG=9.5
    - PGIS=2.3
    addons:
      postgresql: 9.5
      apt:
        packages:
        - postgresql-9.5
        - postgresql-9.5-pgtap
        - postgresql-server-dev-9.5
        - postgresql-9.5-postgis-2.3

  - env:
    - PG=9.6
    - PGIS=2.3
    - TABLEVERSION_BRANCH=master
    - DBPATCH_BRANCH=master
    - STDOUT_SCHEMA_LOADING_SUPPORTED=1
    addons:
      postgresql: 9.6
      apt:
        packages:
        - postgresql-9.6
        - postgresql-9.6-pgtap
        - postgresql-server-dev-9.6
        - postgresql-9.6-postgis-2.3

  - env:
    - PG=10/2.4
    - TABLEVERSION_BRANCH=master
    - DBPATCH_BRANCH=master
    - STDOUT_SCHEMA_LOADING_SUPPORTED=1
    addons:
      postgresql: 10
      apt:
        packages:
        - postgresql-10
        - postgresql-10-pgtap
        - postgresql-server-dev-10
        - postgresql-10-postgis-2.4
        - postgresql-10-postgis-2.4-scripts

  - env:
    - PG=11/2.4
    - TABLEVERSION_BRANCH=master
    - DBPATCH_BRANCH=master
    - STDOUT_SCHEMA_LOADING_SUPPORTED=1
    addons:
      postgresql: 11
      apt:
        packages:
        - postgresql-11
        - postgresql-11-pgtap
        - postgresql-server-dev-11
        - postgresql-11-postgis-2.5
        - postgresql-11-postgis-2.5-scripts

before_install:
  # Install common packages
  - sudo apt-get -qq update
  - sudo apt-get install -y pgtap
    debhelper fakeroot
  # Set PGPORT
  - export PGPORT=`pg_lsclusters  | grep ' online ' | tail -1 | awk '{print $3}'`
  # Show some build info
  - apt-cache search postgis
  - echo $PATH
  - which pg_config
  - pg_config --version
  - which pg_lsclusters
  - pg_lsclusters
  - psql --version
  - psql -c 'select version()'
  - find `pg_config --pkglibdir`| grep postgis
  - find `pg_config --sharedir`/extension | grep postgis
  # Enable fetching packages from packagecloud
  # test and production repositories
  - curl -s https://packagecloud.io/install/repositories/linz/test/script.deb.sh | sudo bash
  - curl -s https://packagecloud.io/install/repositories/linz/prod/script.deb.sh | sudo bash
  # Set default branches for tbale version and dbpatch
  - if test -z "${TABLEVERSION_BRANCH}"; then
      export TABLEVERSION_BRANCH=release-1.5;
    fi
  - if test -z "${DBPATCH_BRANCH}"; then
      export DBPATCH_BRANCH=release-1.3;
    fi
  # Install dbpatch PostgreSQL extension
  - pushd /tmp
  - wget -q -O -
    https://github.com/linz/postgresql-dbpatch/archive/${DBPATCH_BRANCH}.tar.gz
    | tar xzf - && cd postgresql-dbpatch-${DBPATCH_BRANCH}
  - sudo env "PATH=$PATH" make install
  - popd
  # Install table_version PostgreSQL extension
  - pushd /tmp
  - wget -q -O -
    https://github.com/linz/postgresql-tableversion/archive/${TABLEVERSION_BRANCH}.tar.gz
    | tar vxzf - && cd postgresql-tableversion-${TABLEVERSION_BRANCH}
  - sudo env "PATH=$PATH" make install
  - popd
script:
  - make
  - make check || { cat regression.diffs; false; }
  - sudo env "PATH=$PATH" make install
  - make installcheck
  - if test -n "${STDOUT_SCHEMA_LOADING_SUPPORTED}"; then
      make check-loader-stdout;
    fi
  # Test build and installation of debian package
  - make deb
  - sudo dpkg -i ../linz-bde-schema*.deb
  # Test upgrades
  - test/test-upgrades.sh
