sudo: required
dist: bionic
language: C++

global:

  - STDOUT_SCHEMA_LOADING_SUPPORTED=1
  - TABLEVERSION_BRANCH=master
  - DBPATCH_BRANCH=master

matrix:

  include:

  - env:
    - PG=9.3
    - PGIS=2.4

  - env:
    - PG=9.4
    - PGIS=2.4

  - env:
    - PG=9.4
    - PGIS=2.5

  - env:
    - PG=9.6
    - PGIS=2.4

  - env:
    - PG=9.6
    - PGIS=2.5

  - env:
    - PG=10
    - PGIS=2.4

  - env:
    - PG=10
    - PGIS=2.5

  - env:
    - PG=11
    - PGIS=2.5

before_install:
  # Purge PostgreSQL packages
  - sudo apt-get -y --purge remove postgresql libpq-dev libpq5
    postgresql-client-common postgresql-common
  - sudo rm -rf /var/lib/postgresql
  # Enable fetching packages from packagecloud
  # test and production repositories
  - curl -s https://packagecloud.io/install/repositories/linz/test/script.deb.sh | sudo bash
  - curl -s https://packagecloud.io/install/repositories/linz/prod/script.deb.sh | sudo bash
  # Install packages
  - sudo apt-get -qq update
  - sudo apt-get install -y
    postgresql-${PG}
    postgresql-server-dev-${PG}
    postgresql-${PG}-postgis-${PGIS}
    postgresql-client-${PG}
    postgresql-${PG}-pgtap
    postgresql-${PG}-postgis-${PGIS}-scripts
    debhelper fakeroot
    libtap-parser-sourcehandler-pgtap-perl
  # Set PATH as postgresql-server-dev-all pretends version is 11
  - export PATH=/usr/lib/postgresql/${PG}/bin:${PATH}
  # Set default branches for table_version and dbpatch
  - if test -z "${TABLEVERSION_BRANCH}"; then
      export TABLEVERSION_BRANCH=release-1.5;
    fi
  - if test -z "${DBPATCH_BRANCH}"; then
      export DBPATCH_BRANCH=release-1.3;
    fi
  # Install dbpatch PostgreSQL extension
  - pushd /tmp
  - wget -q -O -
    https://github.com/linz/postgresql-dbpatch/archive/${DBPATCH_BRANCH}.tar.gz
    | tar xzf - && cd postgresql-dbpatch-${DBPATCH_BRANCH}
  - sudo env "PATH=$PATH" make install
  - popd
  # Install table_version PostgreSQL extension
  - pushd /tmp
  - wget -q -O -
    https://github.com/linz/postgresql-tableversion/archive/${TABLEVERSION_BRANCH}.tar.gz
    | tar vxzf - && cd postgresql-tableversion-${TABLEVERSION_BRANCH}
  - sudo env "PATH=$PATH" make install
  - popd

before_script:
  - sudo -u postgres createuser -s "$USER"
  - sudo -u postgres createuser -s root

script:
  - make
  - make check || { cat regression.diffs; false; }
  - sudo env "PATH=$PATH" make install
  - make installcheck
  - if test -n "${STDOUT_SCHEMA_LOADING_SUPPORTED}"; then
      make check-loader-stdout;
    fi
  # Test build and installation of debian package
  - make deb
  - sudo dpkg -i ../linz-bde-schema*.deb
  # Test upgrades
  - test/test-upgrades.sh
