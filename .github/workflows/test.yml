name: test

on: [push, pull_request]

jobs:

  test:

    name: PostgreSQL ${{ matrix.pg }}, PostGIS ${{ matrix.pgis }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            pg: [ '9.3', '9.4', '9.5', '9.6', '10', '11' ]
            pgis: [ '2.4', '2.5' ]
            os: [ ubuntu-18.04 ]
            dbpatch_branch: [ 'master' ]
            tableversion_branch: [ 'master' ]
            exclude:
              # excludes PostGIS 2.5 on PostgreSQL 9.3
              - pg: 9.3
                pgis: 2.5
              # excludes PostGIS 2.4 on PostgreSQL 11
              - pg: 11
                pgis: 2.4
    env:
      # Set PATH as postgresql-server-dev-all pretends version is 11
      PATH: /usr/lib/postgresql/${{ matrix.pg }}/bin:/bin:/usr/bin:/usr/local/bin
      # Make apt non-interactive by default, and not showing progress
      APT: "apt-get -o Dpkg::Progress=0 -o Dpkg::Use-Pty=0"
      # Avoid warnings on apt-key usage
      APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE: 1
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo ${APT} -qq purge \
            libpq5 \
            libpq-dev \
            *php* \
            postgresql \
            postgresql-client-common \
            postgresql-common
        sudo rm -rf /var/lib/postgresql
        sudo ${APT} install curl ca-certificates gnupg
        distro=`lsb_release -cs`
        # Enable fetching packages from apt.postgresql repository
        curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ ${distro}-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
        # Enable fetching packages from packagecloud test repository
        curl -Ls https://packagecloud.io/linz/test/gpgkey | sudo apt-key add -
        echo "deb https://packagecloud.io/linz/test/ubuntu/ ${distro} main" | sudo tee /etc/apt/sources.list.d/linz-test.list
        # Enable fetching packages from packagecloud prod repository
        curl -Ls https://packagecloud.io/linz/prod/gpgkey | sudo apt-key add -
        echo "deb https://packagecloud.io/linz/prod/ubuntu/ ${distro} main" | sudo tee /etc/apt/sources.list.d/linz-prod.list
        sudo ${APT} -qq update
        sudo ${APT} -qq install \
            debhelper \
            fakeroot \
            postgresql-client-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }}-pgtap \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }} \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }}-scripts \
            postgresql-server-dev-${{ matrix.pg }},
            tableversion,
            dbpatch
        # Install dbpatch PostgreSQL extension
        pushd /tmp
        wget -q -O - \
            https://github.com/linz/postgresql-dbpatch/archive/${{ matrix.dbpatch_branch }}.tar.gz \
            | tar xzf - && cd postgresql-dbpatch-${{ matrix.dbpatch_branch }}
        sudo -E make install
        popd
        # Install table_version PostgreSQL extension
        pushd /tmp
        wget -q -O - \
            https://github.com/linz/postgresql-tableversion/archive/${{ matrix.tableversion_branch }}.tar.gz \
            | tar vxzf - && cd postgresql-tableversion-${{ matrix.tableversioN_branch }}
        sudo -E make install
        popd
    - name: Setup PostgreSQL user
      run: |
        sudo -u postgres createuser -s "$USER"
        sudo -u postgres createuser -s root
    - name: Build
      run: |
        # Build
        make
    - name: Test build
      run: |
        # Pre-install tests
        make check
    - name: Install
      run: |
        sudo -E make install
    - name: Test installation
      run: |
        # Post-install tests
        make installcheck
        make check-loader-stdout
    - name: Test upgrades
      run: |
        # Test upgrades
        test/test-upgrades.sh
    - name: Test packaging
      run: |
        make deb
        # Building this package requires dbpatch and tableversion
        sudo apt-get install dbpatch tableversion
        sudo dpkg -i ../linz-bde-schema*.deb
    - name: Test publication
      run: |
        make check-publisher
      if: matrix.pg >= 10
